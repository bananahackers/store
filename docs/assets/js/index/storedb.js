class StoreDatabaseAPI{constructor(){this.db={}}loadData(){var e=this;return new Promise((function(s,r){var t=new Worker("assets/js/index/workers/store-worker.js");t.onmessage=function(r){t.terminate(),e.db=r.data,s(r.data)},t.onerror=function(e){t.terminate(),r(e)},t.postMessage(null)}))}getAppsByCategory(e){if(e in this.db.categories)return this.db.apps.categorical[e];throw new TypeError('Category "'+e+'" does not exist!')}sortApps(e,s){var r=this;return new Promise((function(t,a){var o=new Worker("assets/js/index/workers/sort-worker.js");switch(o.onmessage=function(e){o.terminate(),t(e.data.apps)},o.onerror=function(e){o.terminate(),a(e)},s){case"alphabetical":case"categorical":o.postMessage({apps:e,sort:s});break;case"popularity":o.postMessage({apps:e,sort:s,downloadCounts:r.db.apps.downloadCounts});break;default:console.warn("[StoreDb] Unable to sort, returning unsorted apps."),t(e)}}))}dlCountApp(e){return new Promise((function(s,r){var t=new Worker("assets/js/index/workers/ratings-worker.js");t.onmessage=function(e){t.terminate(),e.data.success?s(e.data):r(e.data)},t.onerror=function(){t.terminate(),r()},t.postMessage({command:"count",slug:e})}))}}