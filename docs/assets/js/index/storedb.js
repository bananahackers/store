class StoreDatabaseAPI{constructor(){this.db={}}loadData(){var e=this;return new Promise((function(r,s){var t=new Worker("assets/js/index/workers/store-worker.js");t.onmessage=function(s){t.terminate(),e.db=s.data,r(s.data)},t.onerror=function(e){t.terminate(),s(e)},t.postMessage(null)}))}getAppsByCategory(e){if(e in this.db.categories)return this.db.apps.categorical[e];throw new TypeError('Category "'+e+'" does not exist!')}sortApps(e,r){var s=this;return new Promise((function(t,o){var a=new Worker("assets/js/index/workers/sort-worker.js");switch(a.onmessage=function(e){a.terminate(),t(e.data.apps)},a.onerror=function(e){a.terminate(),o(e)},r){case"alphabetical":case"categorical":a.postMessage({apps:e,sort:r});break;case"popularity":a.postMessage({apps:e,sort:r,downloadCounts:s.db.apps.downloadCounts});break;default:console.warn("[StoreDb] Unable to sort, returning unsorted apps."),t(e)}}))}dlCountApp(e){return new Promise((function(r,s){var t=new Worker("assets/js/index/workers/ratings-worker.js");t.onmessage=function(){t.terminate(),r()},t.onerror=function(){t.terminate(),s()},t.postMessage({cmd:"count",slug:e})}))}}