importScripts("wlog.js");const downloadStats=["https://bhackers.uber.space/srs/v1/download_counter"];onmessage=function(e){wLog("log","Sort worker started.");var o={apps:[],sort:null};"object"==typeof e.data.apps&&"string"==typeof e.data.sort||(wLog("error","Missing arguments for sort worker. Sending back empty data."),postMessage(o));var t=Object.entries(e.data.apps);switch(e.data.sort){case"alphabetical":t.sort((function(e,o){const t=e[1].name.toUpperCase(),s=o[1].name.toUpperCase();return t>s?1:t<s?-1:0}));break;case"popularity":for(const e of downloadStats){var s=new XMLHttpRequest;if(s.open("GET",e,!1),s.setRequestHeader("Content-Type","application/json"),s.send(),s.status>=200&&s.status<300){wLog("log",'Received successful response from "'+e+'".');try{wLog("log","Retrieved downloadCount list.");const e=JSON.parse(s.responseText);t.sort((function(o,t){const s=e[o[1].slug],r=e[t[1].slug];return s>r?1:s<r?-1:0}));break}catch(e){wLog("error","Error parsing response from download count server: "+e)}}else wLog("error","Error making request to download count server: "+s.status)}break;case"categorical":t.sort((function(e,o){const t=e[1].meta.categories[0].toUpperCase(),s=o[1].meta.categories[0].toUpperCase();return t>s?1:t<s?-1:0}))}var r={};for(const e of t)r[e[0]]=e[1];o.apps=r,wLog("log","Sort worker completed!"),postMessage(o)};